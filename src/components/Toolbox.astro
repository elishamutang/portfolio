---
import generateToolIcon from "../scripts/toolbox.js";

const iconInfo = generateToolIcon();
---

<style>
  .tools {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .icon-div {
    position: relative;
  }

  .hide {
    display: none;
  }

  .colored {
    position: absolute;
    top: 0;
    left: 0;
  }
</style>

<div class="tools">
  {
    Object.entries(iconInfo).map(([key, val]) => {
      return (
          <div class="icon-div" id={key}>
            {val.colored ? 
              <val.base.default className="icon"/>
              <val.colored.default className="icon colored hide"/>
            :
              <val.base.default className="icon"/>
            }
          </div>
        )
    })
  }
</div>

<script>
  // astro:page-load re-runs the script.
  document.addEventListener("astro:page-load", () => {
    const techIcons = document.getElementsByClassName("icon-div");
    const techName = document.createElement("p");
    techName.className = "techName";

    Array.from(techIcons).forEach((icon) => {

      const coloredIcon = icon.querySelector('.colored')

      icon.addEventListener("mouseenter", () => {

        if(coloredIcon) {
          coloredIcon.classList.toggle('hide')
        }

        techName.textContent = icon.id;
        icon.insertAdjacentElement("afterbegin", techName);
      });

      icon.addEventListener("mouseleave", () => {

        if(coloredIcon) {
          coloredIcon.classList.toggle('hide')
        }

        techName.remove();
      });
    });
  });
</script>